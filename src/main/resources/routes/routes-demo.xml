

<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://camel.apache.org/schema/spring"
    xsi:schemaLocation="http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd ">

    <route id="HelloRequest">
        <from uri="activemq:queue:phucFrom" />
        <log message="Hello ${body}"/>
        <process ref="helloRequestProcess" />
        <process ref="helloRequestProcess2" />
<!--        <to uri="sql:select * from tutorials"/>-->
        <to uri="mybatis:findAllTutorials?statementType=SelectList"/>
        <process ref="helloRequestProcess3" />
<!--        <to uri="activemq:queue:phucTo2" />-->
    </route>

    <route id="GetAllTutorialRequest">
        <from uri="activemq:queue:MyBatisGetAll" />
        <to uri="myBatis:findAllTutorials?statementType=SelectList"/>
        <process ref="getAllTutorialResponseProcessor" />
    </route>
    <route id="GetAllAccountsRequest2">
        <from uri="activemq:queue:MyBatisGetAllAccounts2" />
        <to uri="myBatis2:findAllAccounts?statementType=SelectList"/>
        <process ref="getAllTutorialResponseProcessor" />
    </route>
    <route id="FindTutorialByIdRequest">
        <from uri="activemq:queue:MybatisFindTutorialById" />
        <process ref="findTutorialByIdRequestProcessor" />
        <to uri="myBatis:findById?statementType=SelectOne"/>
        <process ref="findTutorialByIdResponseProcessor" />
    </route>

    <route id="CreateTutorialRequest">
        <from uri="activemq:queue:MyBatisCreateOneRow" />
        <process ref="createTutorialRequestProcessor" />
        <to uri="myBatis:insertTutorial?statementType=Insert"/>
        <process ref="createTutorialResponseProcessor" />
    </route>
    <route id="CreateTutorialsRequest">
        <from uri="activemq:queue:MybatisCreateTutorials" />
        <process ref="createTutorialsRequestProcessor" />
        <to uri="myBatis:insertTutorials?statementType=InsertList"/>
    </route>

    <route id="UpdateTutorialsRequest">
        <from uri="activemq:queue:MybatisUpdateTutorials" />
        <process ref="updateTutorialsRequestProcessor" />
        <to uri="myBatis:updateTutorials?statementType=UpdateList"/>
    </route>

    <route id="DeleteTutorialsRequest">
        <from uri="activemq:queue:MybatisDeleteTutorials" />
        <process ref="deleteTutorialsRequestProcessor" />
        <to uri="myBatis:deleteTutorials?statementType=DeleteList"/>
    </route>

    <route id="TransactionalRequest">
        <from uri="activemq:queue:MybatisTransactionalRequest" />
        <transacted ref="txRequired" />
<!--            <doTry>-->
                <process ref="updateTutorialsRequestProcessor" />
<!--                <process ref="updateTutorialsTransactionRequestProcessor" />-->
                <to uri="myBatis:updateTutorials?statementType=UpdateList"/>
                <process ref="transactionRequestProcessor" />
                <to uri="myBatis:insertTutorials?statementType=InsertList"/>
<!--                <doCatch>-->
<!--                    <exception>java.lang.Exception</exception>-->
<!--                    <log message="aaaaaaaaaaaaaa" />-->
<!--&lt;!&ndash;                    <rollback message="An error has occurred"/>&ndash;&gt;-->
<!--                </doCatch>-->
<!--            </doTry>-->
<!--        </transacted>-->

<!--        <process ref="transactionFailureHandler" />-->

<!--        <onException>-->
<!--            <exception>java.lang.Exception</exception>-->
<!--            <handled><constant>true</constant></handled>-->
<!--            <rollback message="An error has occurred" markRollbackOnly="true"/>-->
<!--        </onException>-->
    </route>

    <!-- MYSQL -->
    <route id="GetAllAccountRequest">
        <from uri="activemq:queue:MyBatisMySQLGetAllAccount" />
        <to uri="myBatisMySQL:findAllAccounts?statementType=SelectList"/>
        <process ref="getAllAccountResponseProcessor" />
    </route>
    <!-- Get data from MYSQL -> insert into MSSQL database master 2 -->
    <route id="FindAccountByIdRequest">
        <from uri="activemq:queue:MybatisMySQLFindAccountById" />
        <process ref="findAccountByIdRequestProcessor" />
        <to uri="myBatisMySQL:findAccountById?statementType=SelectOne"/>
        <process ref="findAccountByIdResponseProcessor" />
        <to uri="myBatis2:insertAccount?statementType=Insert"/>
    </route>


    <!-- Store Procedure MSSQL -->
    <route id="GetPersonAddressProcedureRequest">
        <from uri="activemq:queue:MybatisGetPersonAddressProcedure" />
        <to uri="myBatis:callProcedureGetPersonAddress?statementType=SelectList"/>
        <process ref="getPersonAddressResponseProcessor" />
    </route>
</routes>